---
# populate a fresh Pop!_os instance
- hosts: 127.0.0.1
  connection: local
  vars:
    local_user: "{{ ansible_user_id }}"
    local_home: "{{ lookup('env','HOME') }}"
    region_loc: "us_US.UTF-8"
    new_hostname: devxps
    gist_file: "{{ local_home }}/dconf-settings.dconf"
    gnome_extension_ids:
      - 277 # impatience
      - 906 # sound input and output device chooser
      - 1251 # blyr
      - 2660 # transparent panel
      - 53 # pomodoro

  roles:
    - { role: powerlinefonts, tags: "font" }
    - { role: gui_apps, tags: "app" }
    - { role: apt_packages, tags: "apt" }
    - { role: dot_files, tag: "dot" }
    - { role: jaredhocutt.gnome_extensions, tags: "gext" }
    - { role: external, tags: "external" }

  tasks:
    - name: Ensure group "docker" exists
      become: yes
      group:
        name: docker
        state: present

    - name: Set user settings
      become: yes
      user:
        name: "{{ local_user }}"
        shell: /usr/bin/zsh
        groups: docker
        append: yes
        # generate_ssh_key: yes

    - name: set the newgroup
      become: yes
      shell: "newgrp docker"

    # - name: Set hostname of the machine
    #   become: yes
    #   shell: "echo '{{ new_hostname }}' > '/etc/hostname'"

    #  TEST IF DIR EXSISTS, IF NOT > CREATE IT
    - name: Create dirs
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ local_home }}/storage"
        - "{{ local_home }}/Apps"
        - "{{ local_home }}/.local/bin"
        - "{{ local_home }}/.local/share/fonts"
        - "{{ local_home }}/go"
        - "{{ local_home }}/digikam"
        - "{{ local_home }}/git"

      #  files exists
    - name: Create Files
      file:
        path: "{{ item }}"
        state: file
      with_items:
        - "{{ local_home }}/linux-backup.sh"
        - "{{ local_home }}/linux-backup.log"
        - "{{ local_home }}/.zshrc.local"

    - name: Make sudo docker paswordless
      become: yes
      lineinfile:
        path: /etc/sudoers.d/docker
        line: "%sudo  ALL=(ALL:ALL) NOPASSWD:/snap/bin/docker"
        create: yes
        owner: root
        mode: "0440"

    - name: Test if oh-my-zsh is present.
      stat:
        path: "{{ local_home }}/.oh-my-zsh"
      register: ohmyzsh

    - name: Install "oh-my-zsh"
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      when: not ohmyzsh.stat.exists
    # - name: Clone dotfiles
    #   git:
    #     repo: "https://github.com/kevinjelnl/dotfiles.git"
    #     dest: "{{ local_home }}/dotfiles"
    #     update: no
    # - name: Set dotfiles
    #   shell: ./install
    #   args:
    #     chdir: "{{ local_home }}/dotfiles"
    # # change the remote of the repo to SSH
    # git remote set-url origin git@github.com:kevinjelnl/dotfiles.git
    # - name: Ensure a locale exists
    #   become: yes
    #   locale_gen:
    #     name: "{{ region_loc }}"
    #     state: present
    - name: Test if submodule with gist is present
      stat:
        path: "{{ gist_file }}"
      register: dconfisthere

    - name: load DCONF settings
      shell: "dconf load '/' < '{{ gist_file }}'"
      when: dconfisthere.stat.exists

      # planner personal information
    - name: Set multiple crons
      cron:
        name: "{{ item.name }}"
        special_time: "{{ item.time }}"
        job: "{{ item.job }}"
      loop:
        - { name: "borg backup", time: "hourly", job: "linux-backup.sh" }

    - name: Set multiple crons
      cron:
        name: "{{ item.name }}"
        special_time: "{{ item.time }}"
        job: "{{ item.job }}"
      loop:
        - {
            name: "dump dconf",
            time: "weekly",
            job: "/usr/bin/dconf dump / > {{ gist_file }}",
          }
